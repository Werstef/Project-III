// <auto-generated />
using System;
using KristMedv2.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KristMedv2.DataAccess.Migrations
{
    [DbContext(typeof(KristMedv2DbContext))]
    [Migration("20200428085729_Code1")]
    partial class Code1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KristMedv2.ApplicationLogic.DataModels.Admin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("KristMedv2.ApplicationLogic.DataModels.Appointment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AdminId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<Guid>("MedicId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TreatmentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.HasIndex("ClientId");

                    b.HasIndex("MedicId");

                    b.HasIndex("TreatmentId");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("KristMedv2.ApplicationLogic.DataModels.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("KristMedv2.ApplicationLogic.DataModels.ContactMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MessageText")
                        .IsRequired()
                        .HasColumnType("varchar(5000)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("ContactMessages");
                });

            modelBuilder.Entity("KristMedv2.ApplicationLogic.DataModels.EquipmentType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsageTimeAvailable")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("EquipmentTypes");
                });

            modelBuilder.Entity("KristMedv2.ApplicationLogic.DataModels.Equipment_Treatment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EquipmentTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TreatmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("UsageTime")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentTypeId");

                    b.HasIndex("TreatmentId");

                    b.ToTable("Equipment_Treatments");
                });

            modelBuilder.Entity("KristMedv2.ApplicationLogic.DataModels.Medic", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Medics");
                });

            modelBuilder.Entity("KristMedv2.ApplicationLogic.DataModels.MedicationType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuantityStock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MedicationTypes");
                });

            modelBuilder.Entity("KristMedv2.ApplicationLogic.DataModels.Medication_Treatment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MedicationTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("QuantityUsed")
                        .HasColumnType("int");

                    b.Property<Guid?>("TreatmentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MedicationTypeId");

                    b.HasIndex("TreatmentId");

                    b.ToTable("Medication_Treatments");
                });

            modelBuilder.Entity("KristMedv2.ApplicationLogic.DataModels.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(5000)");

                    b.Property<Guid?>("TreatmentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TreatmentId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("KristMedv2.ApplicationLogic.DataModels.Treatment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Diagnosis")
                        .IsRequired()
                        .HasColumnType("varchar(5000)");

                    b.Property<Guid>("MedicId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("MedicId");

                    b.ToTable("Treatments");
                });

            modelBuilder.Entity("KristMedv2.ApplicationLogic.DataModels.Appointment", b =>
                {
                    b.HasOne("KristMedv2.ApplicationLogic.DataModels.Admin", "Admin")
                        .WithMany()
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KristMedv2.ApplicationLogic.DataModels.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId");

                    b.HasOne("KristMedv2.ApplicationLogic.DataModels.Medic", "Medic")
                        .WithMany()
                        .HasForeignKey("MedicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KristMedv2.ApplicationLogic.DataModels.Treatment", "Treatment")
                        .WithMany("Appointments")
                        .HasForeignKey("TreatmentId");
                });

            modelBuilder.Entity("KristMedv2.ApplicationLogic.DataModels.ContactMessage", b =>
                {
                    b.HasOne("KristMedv2.ApplicationLogic.DataModels.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KristMedv2.ApplicationLogic.DataModels.Equipment_Treatment", b =>
                {
                    b.HasOne("KristMedv2.ApplicationLogic.DataModels.EquipmentType", null)
                        .WithMany("Equipment_Treatments")
                        .HasForeignKey("EquipmentTypeId");

                    b.HasOne("KristMedv2.ApplicationLogic.DataModels.Treatment", null)
                        .WithMany("Equipments_Treatment")
                        .HasForeignKey("TreatmentId");
                });

            modelBuilder.Entity("KristMedv2.ApplicationLogic.DataModels.Medication_Treatment", b =>
                {
                    b.HasOne("KristMedv2.ApplicationLogic.DataModels.MedicationType", null)
                        .WithMany("Medication_Treatments")
                        .HasForeignKey("MedicationTypeId");

                    b.HasOne("KristMedv2.ApplicationLogic.DataModels.Treatment", null)
                        .WithMany("Medications_Treatment")
                        .HasForeignKey("TreatmentId");
                });

            modelBuilder.Entity("KristMedv2.ApplicationLogic.DataModels.Post", b =>
                {
                    b.HasOne("KristMedv2.ApplicationLogic.DataModels.Treatment", null)
                        .WithMany("Posts")
                        .HasForeignKey("TreatmentId");
                });

            modelBuilder.Entity("KristMedv2.ApplicationLogic.DataModels.Treatment", b =>
                {
                    b.HasOne("KristMedv2.ApplicationLogic.DataModels.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KristMedv2.ApplicationLogic.DataModels.Medic", "Medic")
                        .WithMany()
                        .HasForeignKey("MedicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
